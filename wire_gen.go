// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-playground/validator"
	"github.com/google/wire"
	"net/http"
	"x1-cinema/app"
	"x1-cinema/controller"
	"x1-cinema/middleware"
	"x1-cinema/repository"
	"x1-cinema/service"
)

import (
	_ "github.com/go-sql-driver/mysql"
)

// Injectors from injector.go:

func InitializedServer() *http.Server {
	db := app.NewDB()
	cinemaRepositoryImpl := repository.NewCinemaRepository(db)
	validate := validator.New()
	cinemaServiceImpl := service.NewCinemaService(cinemaRepositoryImpl, db, validate)
	cinemaControllerImpl := controller.NewCinemaController(cinemaServiceImpl)
	router := app.NewRouter(cinemaControllerImpl)
	authMiddleware := middleware.NewAuthMiddleware(router)
	server := NewServer(authMiddleware)
	return server
}

// injector.go:

var cinemaSet = wire.NewSet(repository.NewCinemaRepository, wire.Bind(new(repository.CinemaRepository), new(*repository.CinemaRepositoryImpl)), service.NewCinemaService, wire.Bind(new(service.CinemaService), new(*service.CinemaServiceImpl)), controller.NewCinemaController, wire.Bind(new(controller.CinemaController), new(*controller.CinemaControllerImpl)))

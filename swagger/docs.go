// Package swagger Code generated by swaggo/swag. DO NOT EDIT
package swagger

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/create": {
            "post": {
                "description": "Create a new theater with the provided data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cinema"
                ],
                "summary": "Create a new theater",
                "parameters": [
                    {
                        "description": "Cinema object to be created",
                        "name": "Cinema",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/web.CinemaCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.WebResponse"
                        }
                    }
                }
            }
        },
        "/delete/{CinemaCode}": {
            "delete": {
                "description": "Delete theater with Cinema Code provided.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cinema"
                ],
                "summary": "Delete theater",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cinema object to be deleted",
                        "name": "CinemaCode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.WebResponse"
                        }
                    }
                }
            }
        },
        "/get": {
            "get": {
                "description": "Find All Theater on Master.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cinema"
                ],
                "summary": "Find All Theater",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.WebResponse"
                        }
                    }
                }
            }
        },
        "/get/{CinemaCode}": {
            "get": {
                "description": "Find Specific Theater By Code Provided.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cinema"
                ],
                "summary": "Find By Theater Code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cinema Found",
                        "name": "CinemaCode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.WebResponse"
                        }
                    }
                }
            }
        },
        "/update/{CinemaCode}": {
            "put": {
                "description": "Update theater with the provided data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cinema"
                ],
                "summary": "Update theater",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cinema object to be updated",
                        "name": "CinemaCode",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Cinema object to be updated",
                        "name": "Cinema",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/web.CinemaUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.WebResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "web.CinemaCreateRequest": {
            "type": "object",
            "required": [
                "cinema_code",
                "cinema_name"
            ],
            "properties": {
                "cinema_code": {
                    "type": "string"
                },
                "cinema_name": {
                    "type": "string"
                }
            }
        },
        "web.CinemaUpdateRequest": {
            "type": "object",
            "properties": {
                "cinema_name": {
                    "type": "string"
                }
            }
        },
        "web.WebResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "status": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "x1-cinema API",
	Description:      "API Doc for x1-cinema.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
